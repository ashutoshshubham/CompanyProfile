{"ast":null,"code":"var _jsxFileName = \"D:\\\\Company_Profile\\\\frontend\\\\src\\\\components\\\\Images.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/image/add\";\nconst Images = () => {\n  _s();\n  const [postImage, setPostImage] = useState({\n    myFile: \"\"\n  });\n  const createPost = async newImage => {\n    try {\n      await axios.post(url, newImage);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createPost(postImage);\n    console.log(\"Uploaded\");\n  };\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    const base64 = await convertToBase64(file);\n    console.log(base64);\n    setPostImage({\n      ...postImage,\n      myFile: base64\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: postImage.images,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        label: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Images, \"D+RzQDhZf37q5efJMmaNRTRVywE=\");\n_c = Images;\nexport default Images;\nvar _c;\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","url","Images","_s","postImage","setPostImage","myFile","createPost","newImage","post","error","console","log","handleSubmit","e","preventDefault","handleFileUpload","file","target","files","base64","convertToBase64","children","onSubmit","htmlFor","className","src","images","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","label","_c","$RefreshReg$"],"sources":["D:/Company_Profile/frontend/src/components/Images.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst url = \"http://localhost:5000/image/add\"\r\n\r\nconst Images = () => {\r\n\r\n    const [postImage, setPostImage] = useState({ myFile: \"\" })\r\n\r\n    const createPost = async (newImage) => {\r\n        try {\r\n            await axios.post(url, newImage)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createPost(postImage)\r\n        console.log(\"Uploaded\")\r\n    }\r\n\r\n    const handleFileUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        const base64 = await convertToBase64(file);\r\n        console.log(base64)\r\n        setPostImage({ ...postImage, myFile: base64 })\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"file-upload\" className='custom-file-upload'>\r\n                    <img src={postImage.images} alt=\"\" />\r\n                </label>\r\n\r\n                <input type=\"file\"\r\n                label />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Images"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,GAAG,GAAG,iCAAiC;AAE7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC;IAAES,MAAM,EAAE;EAAG,CAAC,CAAC;EAE1D,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACA,MAAMV,KAAK,CAACW,IAAI,CAACR,GAAG,EAAEO,QAAQ,CAAC;IACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,MAAMG,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBR,UAAU,CAACH,SAAS,CAAC;IACrBO,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMI,gBAAgB,GAAG,MAAOF,CAAC,IAAK;IAClC,MAAMG,IAAI,GAAGH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAG,MAAMC,eAAe,CAACJ,IAAI,CAAC;IAC1CN,OAAO,CAACC,GAAG,CAACQ,MAAM,CAAC;IACnBf,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAEE,MAAM,EAAEc;IAAO,CAAC,CAAC;EAClD,CAAC;EACD,oBACIpB,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAMuB,QAAQ,EAAEV,YAAa;MAAAS,QAAA,gBACzBtB,OAAA;QAAOwB,OAAO,EAAC,aAAa;QAACC,SAAS,EAAC,oBAAoB;QAAAH,QAAA,eACvDtB,OAAA;UAAK0B,GAAG,EAAEtB,SAAS,CAACuB,MAAO;UAACC,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjC,eAERhC,OAAA;QAAOiC,IAAI,EAAC,MAAM;QAClBC,KAAK;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd,CAAC;AAAA7B,EAAA,CArCKD,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAuCZ,eAAeA,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}